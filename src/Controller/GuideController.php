<?php

namespace App\Controller;

use App\Entity\Evenement;
use App\Form\GuideType;
use App\Entity\Guide;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;


class GuideController extends AbstractController
{
    /**
     * @Route("/guide", name="guide")
     */
    public function index(): Response
    {
        return $this->render('guide/index.html.twig', [
            'controller_name' => 'GuideController',
        ]);
    }


    /**
     * @Route("/ajoutguide", name="ajoutguide")
     */
    public function addGuide(Request $request): Response
    {
        $guide = new Guide();
        $form = $this->createForm(GuideType::class, $guide);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager = $this->getDoctrine()->getManager();

            $file = $form->get('Photo')->getData();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Guide_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $guide->setPhoto($fileName);
            $entityManager->persist($guide);
            $entityManager->flush();
            return $this->redirectToRoute("affichguideAdmin");
        }
        return $this->render("guide/AjoutGuide.html.twig", [
            "form_title" => "Ajouter un guide",
            "form_guide" => $form->createView(),
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }



    /**
     * @Route("/affichguideAdmin", name="affichguideAdmin")
     */
    public function AfficherGuideAdmin(): Response
    {
        $guide = $this->getDoctrine()->getRepository(guide::class)->findAll();

        return $this->render('guide/AfficherGuideAdmin.html.twig', [
            'controller_name' => 'GuideController',
            "guide" => $guide,

        ]);
    }

    /**
     * @Route("/Home", name="Home")
     */
    public function AfficherGuide(): Response
    {
        $event = $this->getDoctrine()->getRepository(Evenement::class)->findAll();
        $guide = $this->getDoctrine()->getRepository(guide::class)->findAll();


        return $this->render('index.html.twig', [
            'controller_name' => 'GuideController',
            'guide' => $guide,
            'data' => $event

        ]);
    }

    /**
     * @Route("/deleteGuide/{id}", name="deleteGuide")
     */
    public function deleteGuide(int $id): Response
    {
        $entityManager = $this->getDoctrine()->getManager();
        $guide = $entityManager->getRepository(Guide::class)->find($id);
        $entityManager->remove($guide);
        $entityManager->flush();
        $this->addFlash('success', 'L"action a été effectué');


        return $this->redirectToRoute("affichguideAdmin");
    }

    /**
     * @Route("/modifyGuide/{id}", name="modifyGuide")
     */
    public function modifyGuide(Request $request, int $id): Response
    {
        $entityManager = $this->getDoctrine()->getManager();

        $guide = $entityManager->getRepository(Guide::class)->find($id);
        $form = $this->createForm(GuideType::class, $guide);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager = $this->getDoctrine()->getManager();
            // $file stores the uploaded PDF file
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            //  $file = $guide->getPhoto();
            $file = $form->get('Photo')->getData();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Guide_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $guide->setPhoto($fileName);

            $entityManager->flush();
            $this->addFlash('success', 'L"action a été effectué');
            return $this->redirectToRoute("affichguideAdmin");
        }

        return $this->render("guide/ModifierGuide.html.twig", [
            "form_title" => "Modifier un guide",
            "form_guide" => $form->createView(),
        ]);
    }
}
